package RetailStore;

import java.util.LinkedList;
import java.util.Queue;

public class OrderQueue {

    private Queue<Order> orderQueue;

    public OrderQueue() {
        this.orderQueue = new LinkedList<>();
    }

    public void enqueueOrder(Order order) {
        if (order != null) {
            orderQueue.add(order);
            System.out.println("Order " + order.getOrderId() + " added to the queue.");
        } else {
            System.out.println("Cannot add null order to the queue.");
        }
    }

    public Order dequeueOrder() {
        if (orderQueue.isEmpty()) {
            System.out.println("No orders in the queue.");
            return null;
        }
        Order order = orderQueue.poll();
        System.out.println("Processing Order " + order.getOrderId());
        return order;
    }

    public Order peekOrder() {
        if (orderQueue.isEmpty()) {
            System.out.println("No orders in the queue.");
            return null;
        }
        return orderQueue.peek();
    }

    public boolean isEmpty() {
        return orderQueue.isEmpty();
    }

    public int getQueueSize() {
        return orderQueue.size();
    }
}
