package RetailStore;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.sql.*;

public class ManageProducts {

    private JFrame frame;
    private JTextField productIdField, nameField, descriptionField, priceField, stockField;
    private RetailStore.ProductCatalog productCatalog;
    private JLabel imageLabel;

    private static final String DB_URL = "jdbc:mysql://localhost:3306/solesociety";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "1234";

    public ManageProducts(RetailStore.ProductCatalog productCatalog) {
        this.productCatalog = productCatalog;
        initialize();
    }

    private void initialize() {
        frame = new JFrame("Manage Products");
        frame.getContentPane().setBackground(new Color(255, 255, 255));
        frame.setBounds(100, 100, 500, 370);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().setLayout(null);

        JPanel headerPanel = new JPanel();
        headerPanel.setBackground(Color.BLACK);
        headerPanel.setBounds(0, 0, 500, 42);
        frame.getContentPane().add(headerPanel);
        headerPanel.setLayout(null);

        JLabel lblManageProducts = new JLabel("Manage Products");
        lblManageProducts.setForeground(Color.WHITE);
        lblManageProducts.setFont(new Font("Arial Rounded MT Bold", Font.PLAIN, 24));
        lblManageProducts.setHorizontalAlignment(SwingConstants.CENTER);
        lblManageProducts.setBounds(0, 0, 500, 42);
        headerPanel.add(lblManageProducts);

        JButton btnBack = new JButton("Back");
        btnBack.setBackground(new Color(157, 236, 255));
        btnBack.setBounds(10, 15, 63, 23);
        headerPanel.add(btnBack);

        btnBack.addActionListener(e -> frame.dispose());

        JLabel lblProductId = new JLabel("Product ID:");
        lblProductId.setFont(new Font("Trebuchet MS", Font.PLAIN, 20));
        lblProductId.setBounds(41, 50, 106, 25);
        frame.getContentPane().add(lblProductId);

        productIdField = new JTextField();
        productIdField.setBounds(170, 50, 308, 25);
        frame.getContentPane().add(productIdField);

        JLabel lblName = new JLabel("Name:");
        lblName.setFont(new Font("Trebuchet MS", Font.PLAIN, 20));
        lblName.setBounds(60, 90, 87, 25);
        frame.getContentPane().add(lblName);

        nameField = new JTextField();
        nameField.setBounds(170, 90, 308, 25);
        frame.getContentPane().add(nameField);

        JLabel lblDescription = new JLabel("Description:");
        lblDescription.setFont(new Font("Trebuchet MS", Font.PLAIN, 20));
        lblDescription.setBounds(26, 130, 121, 25);
        frame.getContentPane().add(lblDescription);

        descriptionField = new JTextField();
        descriptionField.setBounds(170, 130, 308, 25);
        frame.getContentPane().add(descriptionField);

        JLabel lblPrice = new JLabel("Price:");
        lblPrice.setFont(new Font("Trebuchet MS", Font.PLAIN, 20));
        lblPrice.setBounds(60, 170, 100, 25);
        frame.getContentPane().add(lblPrice);

        priceField = new JTextField();
        priceField.setBounds(170, 170, 308, 25);
        frame.getContentPane().add(priceField);

        JLabel lblStock = new JLabel("Stock:");
        lblStock.setFont(new Font("Trebuchet MS", Font.PLAIN, 20));
        lblStock.setBounds(60, 210, 100, 25);
        frame.getContentPane().add(lblStock);

        stockField = new JTextField();
        stockField.setBounds(170, 210, 308, 25);
        frame.getContentPane().add(stockField);

        imageLabel = new JLabel("No image selected");
        imageLabel.setFont(new Font("Trebuchet MS", Font.PLAIN, 15));
        imageLabel.setBounds(10, 251, 308, 25);
        frame.getContentPane().add(imageLabel);

        JButton uploadImageButton = new JButton("Upload Image");
        uploadImageButton.setBackground(new Color(169, 220, 248));
        uploadImageButton.setBounds(330, 246, 150, 30);
        frame.getContentPane().add(uploadImageButton);

        JButton addButton = new JButton("Add");
        addButton.setBackground(new Color(169, 220, 248));
        addButton.setBounds(10, 287, 150, 30);
        frame.getContentPane().add(addButton);

        JButton updateButton = new JButton("Update");
        updateButton.setBackground(new Color(169, 220, 248));
        updateButton.setBounds(168, 287, 150, 30);
        frame.getContentPane().add(updateButton);

        JButton deleteButton = new JButton("Delete");
        deleteButton.setBackground(new Color(169, 220, 248));
        deleteButton.setBounds(328, 287, 150, 30);
        frame.getContentPane().add(deleteButton);

        uploadImageButton.addActionListener(e -> {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Select Product Image");
            int result = fileChooser.showOpenDialog(frame);
            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                String imagePath = "photos/" + selectedFile.getName();
                imageLabel.setText("Selected: " + selectedFile.getName());
            }
        });

        addButton.addActionListener(e -> addProduct());
        updateButton.addActionListener(e -> updateProduct());
        deleteButton.addActionListener(e -> deleteProduct());

        frame.setVisible(true);
    }

    private void addProduct() {
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String query = "INSERT INTO products (product_id, name, description, price, stock, productImage) VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement ps = conn.prepareStatement(query)) {
                ps.setString(1, productIdField.getText());
                ps.setString(2, nameField.getText());
                ps.setString(3, descriptionField.getText());
                ps.setDouble(4, Double.parseDouble(priceField.getText()));
                ps.setInt(5, Integer.parseInt(stockField.getText()));
                ps.setString(6, imageLabel.getText().replace("Selected: ", ""));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(frame, "Product Added Successfully!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void updateProduct() {
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String query = "UPDATE products SET name=?, description=?, price=?, stock=?, productImage=? WHERE product_id=?";
            try (PreparedStatement ps = conn.prepareStatement(query)) {
                ps.setString(1, nameField.getText());
                ps.setString(2, descriptionField.getText());
                ps.setDouble(3, Double.parseDouble(priceField.getText()));
                ps.setInt(4, Integer.parseInt(stockField.getText()));
                ps.setString(5, imageLabel.getText().replace("Selected: ", ""));
                ps.setString(6, productIdField.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(frame, "Product Updated Successfully!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void deleteProduct() {
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String query = "DELETE FROM products WHERE product_id=?";
            try (PreparedStatement ps = conn.prepareStatement(query)) {
                ps.setString(1, productIdField.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(frame, "Product Deleted Successfully!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
